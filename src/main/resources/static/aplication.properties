#spring.datasource.hikari.connectionTimeout=20000
#spring.datasource.hikari.maximumPoolSize=5

spring.datasource.driver-class-name=org.postgresql.Driver
#spring.datasource.platform=postgres
#spring.datasource.jdbc-url=jdbc:postgresql://ec2-52-86-33-50.compute-1.amazonaws.com:5432/d35e1d5us90cuf?sslmode=require
spring.datasource.url=jdbc:postgresql://ec2-52-86-33-50.compute-1.amazonaws.com:5432/d35e1d5us90cuf?user=ucmjkxdlkqmgfk&password=499a84f312d74b7f5607b6fb20b97da9b7e9c7629b23e70eeafd2f1f95092e34&ssl=true&sslfactory=org.postgresql.ssl.NonValidatingFactory
spring.datasource.username=ucmjkxdlkqmgfk
spring.datasource.password=499a84f312d74b7f5607b6fb20b97da9b7e9c7629b23e70eeafd2f1f95092e34
spring.datasource.testWhileIdle = true
spring.datasource.validationQuery = SELECT 1
# ===============================
# = JPA / HIBERNATE
# ===============================

# Use spring.jpa.properties.* for Hibernate native properties (the prefix is
# stripped before adding them to the entity manager).

# Show or not log for each sql query
spring.jpa.show-sql = true

spring.jpa.generate-ddl=true


# Hibernate ddl auto (create, create-drop, update): with "update" the database
# schema will be automatically updated accordingly to java entities found in
# the project
spring.jpa.hibernate.ddl-auto = update


# Naming strategy
#spring.jpa.hibernate.naming-strategy = org.hibernate.cfg.ImprovedNamingStrategy

# Allows Hibernate to generate SQL optimized for a particular DBMS
spring.jpa.properties.hibernate.dialect = org.hibernate.dialect.PostgreSQLDialect

spring.jpa.properties.hibernate.jdbc.lob.non_contextual_creation=true

jwt.secret=javainuse